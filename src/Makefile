#############################################################################
# Makefile for building: main
# Generated by qmake (1.05a) (Qt 3.1.2) on: Wed Dec 15 09:41:20 2004
# Project:  main.pro
# Template: app
# Command: $(QMAKE) -o Makefile main.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -march=i386 -mcpu=i686 -fno-use-cxa-atexit -fno-exceptions -D_REENTRANT  -DQT_CLEAN_NAMESPACE -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -march=i386 -mcpu=i686 -fno-use-cxa-atexit -fno-exceptions -D_REENTRANT  -DQT_CLEAN_NAMESPACE -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/default -I. -I. -I../../../../../project/stc/d7/max/glew-1.2.5/include -I$(QTDIR)/include -I/usr/X11R6/include -I/usr/X11R6/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -L/usr/X11R6/lib -lCgGL -lCg -lXmu -lXi -lpthread -lGL -lGLU -lglut -lGLEW -L/home/max/stc/max/glew/lib -lqt-mt -lGLU -lGL -lXmu -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = GLWindow.h \
		GLPainterlyObj.h \
		Color.h \
		Point.h \
		RenderTexture.h \
		Stroke.h
SOURCES = main.cpp \
		RenderTexture.cpp \
		GLWindow.cpp \
		Stroke.cpp \
		GLPainterlyObj.cpp \
		GLPainterlyObjCg.cpp \
		GLPainterlyObjFile.cpp \
		GLPainterlyObjFilters.cpp \
		GLPainterlyObjInit.cpp \
		GLPainterlyObjOptions.cpp \
		GLPainterlyObjPaint.cpp \
		GLPainterlyObjStyles.cpp \
		GLPainterlyObjUtility.cpp
OBJECTS = main.o \
		RenderTexture.o \
		GLWindow.o \
		Stroke.o \
		GLPainterlyObj.o \
		GLPainterlyObjCg.o \
		GLPainterlyObjFile.o \
		GLPainterlyObjFilters.o \
		GLPainterlyObjInit.o \
		GLPainterlyObjOptions.o \
		GLPainterlyObjPaint.o \
		GLPainterlyObjStyles.o \
		GLPainterlyObjUtility.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_GLWindow.cpp \
		moc_GLPainterlyObj.cpp
OBJMOC = moc_GLWindow.o \
		moc_GLPainterlyObj.o
DIST	   = main.pro
QMAKE_TARGET = main
DESTDIR  = 
TARGET   = main

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: main.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile main.pro
qmake: 
	@$(QMAKE) -o Makefile main.pro

dist: 
	@mkdir -p .tmp/main && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/main/ && ( cd `dirname .tmp/main` && $(TAR) main.tar main && $(GZIP) main.tar ) && $(MOVE) `dirname .tmp/main`/main.tar.gz . && $(DEL_FILE) -r .tmp/main

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp GLWindow.h

RenderTexture.o: RenderTexture.cpp RenderTexture.h

GLWindow.o: GLWindow.cpp GLWindow.h \
		GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

Stroke.o: Stroke.cpp Stroke.h \
		Point.h \
		Color.h

GLPainterlyObj.o: GLPainterlyObj.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjCg.o: GLPainterlyObjCg.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjFile.o: GLPainterlyObjFile.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjFilters.o: GLPainterlyObjFilters.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjInit.o: GLPainterlyObjInit.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjOptions.o: GLPainterlyObjOptions.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjPaint.o: GLPainterlyObjPaint.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjStyles.o: GLPainterlyObjStyles.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

GLPainterlyObjUtility.o: GLPainterlyObjUtility.cpp GLPainterlyObj.h \
		RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

moc_GLWindow.o: moc_GLWindow.cpp GLWindow.h 

moc_GLPainterlyObj.o: moc_GLPainterlyObj.cpp GLPainterlyObj.h RenderTexture.h \
		Stroke.h \
		Point.h \
		Color.h

moc_GLWindow.cpp: $(MOC) GLWindow.h
	$(MOC) GLWindow.h -o moc_GLWindow.cpp

moc_GLPainterlyObj.cpp: $(MOC) GLPainterlyObj.h
	$(MOC) GLPainterlyObj.h -o moc_GLPainterlyObj.cpp

####### Install

install: all 

uninstall: 

